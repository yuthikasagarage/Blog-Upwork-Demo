[{"/home/yuthika/Desktop/contextapi/src/index.js":"1","/home/yuthika/Desktop/contextapi/src/App.js":"2","/home/yuthika/Desktop/contextapi/src/reportWebVitals.js":"3","/home/yuthika/Desktop/contextapi/src/components/Navbar.js":"4","/home/yuthika/Desktop/contextapi/src/components/Hero.js":"5","/home/yuthika/Desktop/contextapi/src/context/blogProvider.js":"6","/home/yuthika/Desktop/contextapi/src/context/blogReducer.js":"7","/home/yuthika/Desktop/contextapi/src/context/blogContext.js":"8","/home/yuthika/Desktop/contextapi/src/components/PostList.js":"9","/home/yuthika/Desktop/contextapi/src/components/PostCard.js":"10","/home/yuthika/Desktop/contextapi/src/pages/Home.js":"11","/home/yuthika/Desktop/contextapi/src/pages/Post.js":"12"},{"size":500,"mtime":1612370847561,"results":"13","hashOfConfig":"14"},{"size":589,"mtime":1612551436494,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1612370847561,"results":"16","hashOfConfig":"14"},{"size":321,"mtime":1612548288376,"results":"17","hashOfConfig":"14"},{"size":160,"mtime":1612548148720,"results":"18","hashOfConfig":"14"},{"size":1326,"mtime":1612549442567,"results":"19","hashOfConfig":"14"},{"size":524,"mtime":1612549520993,"results":"20","hashOfConfig":"14"},{"size":105,"mtime":1612526949020,"results":"21","hashOfConfig":"14"},{"size":935,"mtime":1612548979173,"results":"22","hashOfConfig":"14"},{"size":803,"mtime":1612549090285,"results":"23","hashOfConfig":"14"},{"size":232,"mtime":1612548020765,"results":"24","hashOfConfig":"14"},{"size":1222,"mtime":1612550982179,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"11ykhvm",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},"/home/yuthika/Desktop/contextapi/src/index.js",[],["54","55"],"/home/yuthika/Desktop/contextapi/src/App.js",[],"/home/yuthika/Desktop/contextapi/src/reportWebVitals.js",[],"/home/yuthika/Desktop/contextapi/src/components/Navbar.js",[],"/home/yuthika/Desktop/contextapi/src/components/Hero.js",[],"/home/yuthika/Desktop/contextapi/src/context/blogProvider.js",[],"/home/yuthika/Desktop/contextapi/src/context/blogReducer.js",[],"/home/yuthika/Desktop/contextapi/src/context/blogContext.js",[],"/home/yuthika/Desktop/contextapi/src/components/PostList.js",["56"],"import React, { useContext, useEffect } from 'react';\nimport BlogContext from '../context/blogContext';\nimport PostCard from '../components/PostCard';\n\nconst PostList = () => {\n  const blogContext = useContext(BlogContext);\n\n  const { getPosts, blogPosts, loading } = blogContext;\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  return (\n    <div className='posts'>\n      <div className='container'></div>\n      <h2 className='h2x'>Articles</h2>\n      <p>&nbsp;</p>\n      {!loading ? (\n        <div className='posts-grid'>\n          {blogPosts.map((post, i) => {\n            return (\n              <PostCard\n                key={i}\n                title={post.title}\n                image={post.image}\n                author={post.author}\n                date={post.date}\n                id={post.id}\n              ></PostCard>\n            );\n          })}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default PostList;\n","/home/yuthika/Desktop/contextapi/src/components/PostCard.js",[],["57","58"],"/home/yuthika/Desktop/contextapi/src/pages/Home.js",[],"/home/yuthika/Desktop/contextapi/src/pages/Post.js",["59","60","61","62"],"import React, { useContext, useEffect } from 'react';\n\nimport BlogContext from '../context/blogContext';\n\nimport { useParams } from 'react-router-dom';\n\nconst Post = () => {\n  const blogContext = useContext(BlogContext);\n  const {\n    getPosts,\n    blogPosts,\n    loading,\n    getPostById,\n    currentBlogPost,\n  } = blogContext;\n\n  let { postId } = useParams();\n  useEffect(() => {\n    getPostById(postId);\n  }, []);\n\n  return (\n    <div className='post'>\n      {currentBlogPost ? (\n        <>\n          <div\n            className='post-image'\n            style={{\n              width: '100%',\n              height: '300px',\n              backgroundImage: `url('${currentBlogPost.image}')`,\n              backgroundPosition: 'center',\n              backgroundRepeat: 'no-repeat',\n              backgroundSize: 'cover',\n              position: 'relative',\n              borderTopRightRadius: '2px',\n              borderTopLeftRadius: '2px',\n            }}\n          ></div>\n          <div className='post-content'>\n            <h2>{currentBlogPost.title}</h2>\n            <p>{currentBlogPost.content}</p>\n          </div>\n        </>\n      ) : (\n        <p>Loading...</p>\n      )}\n    </div>\n  );\n};\n\nexport default Post;\n",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":12,"column":6,"nodeType":"69","endLine":12,"endColumn":8,"suggestions":"70"},{"ruleId":"63","replacedBy":"71"},{"ruleId":"65","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":10,"column":5,"nodeType":"75","messageId":"76","endLine":10,"endColumn":13},{"ruleId":"73","severity":1,"message":"77","line":11,"column":5,"nodeType":"75","messageId":"76","endLine":11,"endColumn":14},{"ruleId":"73","severity":1,"message":"78","line":12,"column":5,"nodeType":"75","messageId":"76","endLine":12,"endColumn":12},{"ruleId":"67","severity":1,"message":"79","line":20,"column":6,"nodeType":"69","endLine":20,"endColumn":8,"suggestions":"80"},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPosts'. Either include it or remove the dependency array.","ArrayExpression",["83"],["81"],["82"],"no-unused-vars","'getPosts' is assigned a value but never used.","Identifier","unusedVar","'blogPosts' is assigned a value but never used.","'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getPostById' and 'postId'. Either include them or remove the dependency array.",["84"],"no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},{"desc":"87","fix":"88"},"Update the dependencies array to be: [getPosts]",{"range":"89","text":"90"},"Update the dependencies array to be: [getPostById, postId]",{"range":"91","text":"92"},[323,325],"[getPosts]",[413,415],"[getPostById, postId]"]